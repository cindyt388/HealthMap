{"ast":null,"code":"var _jsxFileName = \"/Users/donald/Desktop/react_test/client/src/searchPage/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './App.module.css';\nimport MapBox from './Map/Map.js';\nimport ResultList from './Results/ResultList.js';\nimport SearchInput from '../Shared/SearchInput.js';\nimport FilterList from './Filters/FilterList.js';\nimport FilterModal from './Filters/FilterModal.js';\nimport Logo from '../Shared/Logo.js';\nimport { withRouter } from 'react-router-dom';\nimport Axios from 'axios';\nimport './styles.css';\nexport default function App(props) {\n  const [rows, setRows] = useState([]);\n  const [geocoord, setGeocoord] = useState([0, 0]);\n  const [address, setAddress] = useState(props.match.params.address);\n  const [filters, setFilters] = useState({\n    Treatment: [],\n    Insurance: [],\n    Language: []\n  });\n  const [isDialogOpen, setDialogOpen] = useState(false);\n  const [currentFilter, setCurrentFilter] = useState(\"\");\n  const [visibleBox, setVisibleBox] = useState(-1);\n  const [loading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      const result = await Axios.get(`../api/searchClinics/${props.match.params.address}`).then(function (response) {\n        setRows(response.data.rows);\n        setGeocoord([...response.data.geocoord]);\n        setIsLoading(false);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const onOpenModal = filterType => () => {\n    setDialogOpen(true);\n    setCurrentFilter(filterType);\n  };\n\n  const onClose = e => {\n    setDialogOpen(false);\n  };\n\n  const visibleInfoBox = k => {\n    setVisibleBox(k);\n  };\n\n  const deactivateInfoBox = k => {\n    setVisibleBox(-1);\n  };\n\n  const handleSubmit = data => {\n    Axios.get(`../api/searchClinics/${data.address}`).then(function (response) {\n      setRows(response.data.rows);\n      setGeocoord([...response.data.geocoord]);\n      setAddress(data.address);\n    });\n  };\n\n  const filterClinic = event => {\n    let cloneFilters = { ...filters\n    };\n    const category = event.target.id;\n    let filter = cloneFilters[category];\n\n    if (event.target.checked) {\n      filter.push(event.target.value);\n    } else {\n      let i = filter.indexOf(event.target.value);\n      filter.splice(i, 1);\n    }\n\n    let filterData = {\n      filter: cloneFilters,\n      geocoord: geocoord\n    };\n    Axios.post('/api/filterClinics', filterData).then(function (response) {\n      console.log(response.data.rows);\n      setRows(response.data.rows);\n      setFilters(cloneFilters);\n    });\n  };\n\n  const singularFilter = (filterName, filter) => {\n    let cloneFilters = { ...filters\n    };\n    cloneFilters[filterName] = filter;\n    let filterData = {\n      filter: cloneFilters,\n      geocoord: geocoord\n    };\n    Axios.post('/api/filterClinics', filterData).then(function (response) {\n      /*\n      that.setState({ rows: response.data.rows,\n      \t\tfilters: filterObj,\n      \t\tisDialogOpen: false,\n      \t\t});\n      */\n      setFilters(cloneFilters);\n      setDialogOpen(false);\n      setRows(response.data.rows);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    name: styles.searchLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(SearchInput, {\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterModal, {\n    name: currentFilter,\n    isOpen: isDialogOpen,\n    onClose: onClose,\n    onSubmit: singularFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FilterList, {\n    onChange: filterClinic,\n    openModal: onOpenModal,\n    isOpen: isDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(ResultList, {\n    rows: rows,\n    enableVisibility: visibleInfoBox,\n    disableVisibility: deactivateInfoBox,\n    address: address,\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MapBox, {\n    rows: rows,\n    center: geocoord,\n    cn: styles.mapBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/donald/Desktop/react_test/client/src/searchPage/App.js"],"names":["React","useState","useEffect","styles","MapBox","ResultList","SearchInput","FilterList","FilterModal","Logo","withRouter","Axios","App","props","rows","setRows","geocoord","setGeocoord","address","setAddress","match","params","filters","setFilters","Treatment","Insurance","Language","isDialogOpen","setDialogOpen","currentFilter","setCurrentFilter","visibleBox","setVisibleBox","loading","setIsLoading","fetchData","result","get","then","response","data","onOpenModal","filterType","onClose","e","visibleInfoBox","k","deactivateInfoBox","handleSubmit","filterClinic","event","cloneFilters","category","target","id","filter","checked","push","value","i","indexOf","splice","filterData","post","console","log","singularFilter","filterName","container","header","searchLogo","body","mapBox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './App.module.css';\nimport MapBox  from './Map/Map.js';\nimport ResultList from './Results/ResultList.js';\nimport SearchInput from '../Shared/SearchInput.js';\nimport FilterList from './Filters/FilterList.js';\nimport FilterModal from './Filters/FilterModal.js';\nimport Logo from '../Shared/Logo.js';\nimport { withRouter } from 'react-router-dom';\nimport Axios from 'axios';\nimport './styles.css';\n\nexport default function App (props) {\n\tconst [rows, setRows] = useState([]);\n\tconst [geocoord, setGeocoord] = useState([0, 0]);\n\tconst [address, setAddress] = useState(props.match.params.address);\n\tconst [filters, setFilters] = useState({Treatment: [], Insurance: [], Language: []});\n\tconst [isDialogOpen, setDialogOpen] = useState(false);\n\tconst [currentFilter, setCurrentFilter] = useState(\"\");\n\tconst [visibleBox, setVisibleBox] = useState(-1);\n\tconst [loading, setIsLoading] = useState(true);\n\n\t\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst result = await Axios.get(`../api/searchClinics/${props.match.params.address}`).then( function(response) {\n\t\t\t\tsetRows(response.data.rows);\n\t\t\t\tsetGeocoord([...response.data.geocoord]);\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst onOpenModal = (filterType) => () => {\n\t\tsetDialogOpen(true);\n\t\tsetCurrentFilter(filterType);\n\t}\n\n\tconst onClose = (e) => {\n\t\tsetDialogOpen(false);\n\t}\n\n\tconst visibleInfoBox = (k) => {\n\t\tsetVisibleBox(k);\n\t}\n\t\t\n\tconst deactivateInfoBox = (k) => {\n\t\tsetVisibleBox(-1);\n\t}\n\n\n\tconst handleSubmit = (data) => {\n\t\tAxios.get(`../api/searchClinics/${data.address}`).then( function(response) {\n\t\t\tsetRows(response.data.rows);\n\t\t\tsetGeocoord([...response.data.geocoord]);\n\t\t\tsetAddress(data.address);\n\t\t});\n\t}\n\n\n\tconst filterClinic = (event) => {\n\t\tlet cloneFilters = {...filters};\n\t\tconst category = event.target.id;\n\t\tlet filter = cloneFilters[category];\n\n\t\tif (event.target.checked) {\n\t\t\tfilter.push(event.target.value);\t\n\t\t}\n\n\t\telse {\n\t\t\tlet i = filter.indexOf(event.target.value);\n\t\t\tfilter.splice(i, 1)\n\t\t}\n\n\t\tlet filterData = {\n\t\t\tfilter: cloneFilters,\n\t\t\tgeocoord: geocoord,\n\t\t}\n\n\t\t\n  \t\tAxios.post('/api/filterClinics', filterData).then( function(response) {\n  \t\t\tconsole.log(response.data.rows);\n\t\t\tsetRows(response.data.rows);\n\t\t\tsetFilters(cloneFilters);\n\t\t});\n\n\t}\n\n\tconst singularFilter = (filterName, filter) => {\n\t\tlet cloneFilters = {...filters};\n\t\tcloneFilters[filterName] = filter;\n\n\t\tlet filterData = {\n\t\t\tfilter: cloneFilters,\n\t\t\tgeocoord: geocoord,\n\t\t}\n\n\t\t  Axios.post('/api/filterClinics', filterData).then( function(response) {\n\t\t  \t/*\n\t\t\tthat.setState({ rows: response.data.rows,\n\t\t\t\t\t\t\tfilters: filterObj,\n\t\t\t\t\t\t\tisDialogOpen: false,\n\t\t\t\t\t\t\t});\n\t\t\t*/\n\t\t\tsetFilters(cloneFilters);\n\t\t\tsetDialogOpen(false);\n\t\t\tsetRows(response.data.rows);\n\t\t});\n\t}\n\n\n\t\n\n        return (\n            <div className = {styles.container}>\n                <div className = {styles.header}>\n                \t<Logo name={styles.searchLogo} />\n                    <SearchInput handleSubmit = {handleSubmit}/>\n                </div>\n\n                <div className = {styles.body}>\n\t\t\t\t\t\n\t\t\t\t\t{/*** modal for filters ***/}\n\t\t\t\t\t<FilterModal \n\t\t\t\t\t\tname={currentFilter} \n\t\t\t\t\t\tisOpen = {isDialogOpen} \n\t\t\t\t\t\tonClose = {onClose} \n\t\t\t\t\t\tonSubmit = {singularFilter}\n\t\t\t\t\t/>\n\n                \t<FilterList \n\t                \tonChange = {filterClinic} \n\t                \topenModal = {onOpenModal} \n\t                \tisOpen = {isDialogOpen} \n                \t/>\n\n                    <ResultList \n\t                    rows={rows} \n\t                    enableVisibility={visibleInfoBox} \n\t                    disableVisibility={deactivateInfoBox} \n\t                    address={address}\n\t                    isLoading={loading}\n                    />\n\n                    <MapBox \n\t                    rows={rows} \n\t                    center = {geocoord} \n\t                    cn = {styles.mapBox}\n                    /> \n                </div>\n            </div>\n        );\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}